From 86ad32467aa492abba3110602c89b78406bc2216 Mon Sep 17 00:00:00 2001
From: Rabeeh Khoury <rabeeh@solid-run.com>
Date: Sun, 9 Feb 2014 12:15:35 +0200
Subject: [PATCH 37/46] Renamed Carrier-one to HummingBoard

Signed-off-by: Rabeeh Khoury <rabeeh@solid-run.com>
---
 arch/arm/mach-mx6/Kconfig          |    6 +-
 arch/arm/mach-mx6/Makefile         |    2 +-
 arch/arm/mach-mx6/board-mx6dl_c1.h |   98 ---------
 arch/arm/mach-mx6/board-mx6dl_hb.h |   98 +++++++++
 arch/arm/mach-mx6/board-mx6q_c1.c  |  394 ------------------------------------
 arch/arm/mach-mx6/board-mx6q_c1.h  |   98 ---------
 arch/arm/mach-mx6/board-mx6q_hb.c  |  393 +++++++++++++++++++++++++++++++++++
 arch/arm/mach-mx6/board-mx6q_hb.h  |   98 +++++++++
 arch/arm/tools/mach-types          |    2 +-
 9 files changed, 594 insertions(+), 595 deletions(-)
 delete mode 100644 arch/arm/mach-mx6/board-mx6dl_c1.h
 create mode 100644 arch/arm/mach-mx6/board-mx6dl_hb.h
 delete mode 100644 arch/arm/mach-mx6/board-mx6q_c1.c
 delete mode 100644 arch/arm/mach-mx6/board-mx6q_c1.h
 create mode 100644 arch/arm/mach-mx6/board-mx6q_hb.c
 create mode 100644 arch/arm/mach-mx6/board-mx6q_hb.h

diff --git a/arch/arm/mach-mx6/Kconfig b/arch/arm/mach-mx6/Kconfig
index 3157046..3e56e74 100644
--- a/arch/arm/mach-mx6/Kconfig
+++ b/arch/arm/mach-mx6/Kconfig
@@ -285,8 +285,8 @@ config MACH_MX6Q_HDMIDONGLE
 	  Include support for i.MX 6Quad HDMI Dongle platform. This includes specific
 	  configurations for the board and its peripherals.
 
-config MACH_C1
-	bool "Support SolidRun i.MX6 Carrier One platform"
+config MACH_HB
+	bool "Support SolidRun i.MX6 HummingBoard"
 	select ARCH_MX6Q
 	select SOC_IMX6Q
 	select MACH_MICROSOM
@@ -316,7 +316,7 @@ config MACH_C1
 	select IMX_HAVE_PLATFORM_IMX_PCIE
 	select IMX_HAVE_PLATFORM_IMX_CAAM
 	help
-	  Include support for SolidRun i.MX6 based Carrier One board
+	  Include support for SolidRun i.MX6 based HummingBoard
 
 config MACH_CUBOX_I
 	bool "Support SolidRun i.MX6 CuBox-i family of products"
diff --git a/arch/arm/mach-mx6/Makefile b/arch/arm/mach-mx6/Makefile
index 1d6e256..15a9ae3 100644
--- a/arch/arm/mach-mx6/Makefile
+++ b/arch/arm/mach-mx6/Makefile
@@ -14,7 +14,7 @@ obj-$(CONFIG_MACH_MX6SL_EVK) += board-mx6sl_evk.o mx6sl_evk_pmic_pfuze100.o
 obj-$(CONFIG_MACH_MX6Q_SABRELITE) += board-mx6q_sabrelite.o
 obj-$(CONFIG_MACH_MX6Q_SABRESD) += board-mx6q_sabresd.o mx6q_sabresd_pmic_pfuze100.o
 obj-$(CONFIG_MACH_MICROSOM) += board-mx6q_microsom.o
-obj-$(CONFIG_MACH_C1) += board-mx6q_c1.o
+obj-$(CONFIG_MACH_HB) += board-mx6q_hb.o
 obj-$(CONFIG_MACH_CUBOX_I) += board-mx6q_cubox-i.o
 obj-$(CONFIG_MACH_MX6Q_SABREAUTO) += board-mx6q_sabreauto.o mx6q_sabreauto_pmic_pfuze100.o
 obj-$(CONFIG_MACH_MX6Q_HDMIDONGLE) += board-mx6q_hdmidongle.o
diff --git a/arch/arm/mach-mx6/board-mx6dl_c1.h b/arch/arm/mach-mx6/board-mx6dl_c1.h
deleted file mode 100644
index 1c8cb4e..0000000
--- a/arch/arm/mach-mx6/board-mx6dl_c1.h
+++ /dev/null
@@ -1,98 +0,0 @@
-/*
- * Copyright (C) 2013 SolidRun ltd.
- * Based on sabresd board from Freescale Semiconductor, Inc. All Rights Reserved
- *
- * This program is free software; you can redistribute it and/or modify
- * it under the terms of the GNU General Public License as published by
- * the Free Software Foundation; either version 2 of the License, or
- * (at your option) any later version.
-
- * This program is distributed in the hope that it will be useful,
- * but WITHOUT ANY WARRANTY; without even the implied warranty of
- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
- * GNU General Public License for more details.
-
- * You should have received a copy of the GNU General Public License along
- * with this program; if not, write to the Free Software Foundation, Inc.,
- * 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.
- */
-
-#ifndef _BOARD_MX6DL_C1_H
-#define _BOARD_MX6DL_C1_H
-
-#include <mach/iomux-mx6dl.h>
-
-static iomux_v3_cfg_t mx6dl_c1_pads[] = {
-	/* SPDIF out */
-	MX6DL_PAD_GPIO_17__SPDIF_OUT1,
-
-	/* CAN1  */
-	MX6DL_PAD_SD3_CLK__CAN1_RXCAN,
-	MX6DL_PAD_SD3_CMD__CAN1_TXCAN,
-
-	/* CCM  */
-	MX6DL_PAD_GPIO_5__CCM_CLKO,		/* SGTL500 sys_mclk */
-	MX6DL_PAD_NANDF_CS2__CCM_CLKO2,		/* MIPI CSI clock */
-
-	/* ECSPI2 */
-	MX6DL_PAD_EIM_CS0__ECSPI2_SCLK,
-	MX6DL_PAD_EIM_CS1__ECSPI2_MOSI,
-	MX6DL_PAD_EIM_OE__ECSPI2_MISO,
-	MX6DL_PAD_EIM_RW__ECSPI2_SS0,
-	MX6DL_PAD_EIM_LBA__ECSPI2_SS1,
-
-	/* I2C1 */
-	MX6DL_PAD_EIM_D21__I2C1_SCL,
-	MX6DL_PAD_EIM_D28__I2C1_SDA,
-
-	/* I2C3 */
-	MX6DL_PAD_EIM_D17__I2C3_SCL,
-	MX6DL_PAD_EIM_D18__I2C3_SDA,
-
-	/* PWM */
-	MX6DL_PAD_DISP0_DAT8__PWM1_PWMO,
-	MX6DL_PAD_DISP0_DAT9__PWM2_PWMO,
-	MX6DL_PAD_SD4_DAT1__PWM3_PWMO,
-	MX6DL_PAD_SD4_DAT2__PWM4_PWMO,
-
-	/* UART1 for debug */
-	MX6DL_PAD_CSI0_DAT10__UART1_TXD,
-	MX6DL_PAD_CSI0_DAT11__UART1_RXD,
-
-	/* UART2 RX, TX, CTS and RTS */
-	MX6DL_PAD_SD4_DAT4__UART2_RXD,
-	MX6DL_PAD_SD4_DAT5__UART2_RTS,
-	MX6DL_PAD_SD4_DAT6__UART2_CTS,
-	MX6DL_PAD_SD4_DAT7__UART2_TXD,
-
-	/* USBOTG ID pin */
-	IOMUX_PAD(0x05E0, 0x0210, 3, 0x0790, 1, PAD_CTL_PKE | PAD_CTL_PUE | \
-		PAD_CTL_PUS_100K_DOWN | PAD_CTL_SPEED_LOW |	\
-		PAD_CTL_DSE_80ohm | PAD_CTL_SRE_FAST | PAD_CTL_HYS),
-	/*
-	 * Originally MX6Q_PAD_GPIO_1__USBOTG_ID, but we want it to be
-	 * pulled down ID pin for fixed host connection.
-	 */
-
-	/* USB power enable pins */
-	MX6DL_PAD_EIM_D22__GPIO_3_22,
-	MX6DL_PAD_GPIO_0__GPIO_1_0,
-
-	/* USB OC pin */
-	MX6DL_PAD_KEY_COL4__USBOH3_USBOTG_OC,
-	MX6DL_PAD_GPIO_3__USBOH3_USBH1_OC,
-
-	/* USDHC2 */
-	MX6DL_PAD_SD2_CLK__USDHC2_CLK,
-	MX6DL_PAD_SD2_CMD__USDHC2_CMD,
-	MX6DL_PAD_SD2_DAT0__USDHC2_DAT0,
-	MX6DL_PAD_SD2_DAT1__USDHC2_DAT1,
-	MX6DL_PAD_SD2_DAT2__USDHC2_DAT2,
-	MX6DL_PAD_SD2_DAT3__USDHC2_DAT3,
-	MX6DL_PAD_GPIO_4__USDHC2_CD,		/* SD2_CD */
-
-	/* IR in */
-	MX6DL_PAD_GPIO_2__GPIO_1_2,
-};
-
-#endif
diff --git a/arch/arm/mach-mx6/board-mx6dl_hb.h b/arch/arm/mach-mx6/board-mx6dl_hb.h
new file mode 100644
index 0000000..f9ab563
--- /dev/null
+++ b/arch/arm/mach-mx6/board-mx6dl_hb.h
@@ -0,0 +1,98 @@
+/*
+ * Copyright (C) 2013 SolidRun ltd.
+ * Based on sabresd board from Freescale Semiconductor, Inc. All Rights Reserved
+ *
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 2 of the License, or
+ * (at your option) any later version.
+
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+
+ * You should have received a copy of the GNU General Public License along
+ * with this program; if not, write to the Free Software Foundation, Inc.,
+ * 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.
+ */
+
+#ifndef _BOARD_MX6DL_HB_H
+#define _BOARD_MX6DL_HB_H
+
+#include <mach/iomux-mx6dl.h>
+
+static iomux_v3_cfg_t mx6dl_hb_pads[] = {
+	/* SPDIF out */
+	MX6DL_PAD_GPIO_17__SPDIF_OUT1,
+
+	/* CAN1  */
+	MX6DL_PAD_SD3_CLK__CAN1_RXCAN,
+	MX6DL_PAD_SD3_CMD__CAN1_TXCAN,
+
+	/* CCM  */
+	MX6DL_PAD_GPIO_5__CCM_CLKO,		/* SGTL500 sys_mclk */
+	MX6DL_PAD_NANDF_CS2__CCM_CLKO2,		/* MIPI CSI clock */
+
+	/* ECSPI2 */
+	MX6DL_PAD_EIM_CS0__ECSPI2_SCLK,
+	MX6DL_PAD_EIM_CS1__ECSPI2_MOSI,
+	MX6DL_PAD_EIM_OE__ECSPI2_MISO,
+	MX6DL_PAD_EIM_RW__ECSPI2_SS0,
+	MX6DL_PAD_EIM_LBA__ECSPI2_SS1,
+
+	/* I2C1 */
+	MX6DL_PAD_EIM_D21__I2C1_SCL,
+	MX6DL_PAD_EIM_D28__I2C1_SDA,
+
+	/* I2C3 */
+	MX6DL_PAD_EIM_D17__I2C3_SCL,
+	MX6DL_PAD_EIM_D18__I2C3_SDA,
+
+	/* PWM */
+	MX6DL_PAD_DISP0_DAT8__PWM1_PWMO,
+	MX6DL_PAD_DISP0_DAT9__PWM2_PWMO,
+	MX6DL_PAD_SD4_DAT1__PWM3_PWMO,
+	MX6DL_PAD_SD4_DAT2__PWM4_PWMO,
+
+	/* UART1 for debug */
+	MX6DL_PAD_CSI0_DAT10__UART1_TXD,
+	MX6DL_PAD_CSI0_DAT11__UART1_RXD,
+
+	/* UART2 RX, TX, CTS and RTS */
+	MX6DL_PAD_SD4_DAT4__UART2_RXD,
+	MX6DL_PAD_SD4_DAT5__UART2_RTS,
+	MX6DL_PAD_SD4_DAT6__UART2_CTS,
+	MX6DL_PAD_SD4_DAT7__UART2_TXD,
+
+	/* USBOTG ID pin */
+	IOMUX_PAD(0x05E0, 0x0210, 3, 0x0790, 1, PAD_CTL_PKE | PAD_CTL_PUE | \
+		PAD_CTL_PUS_100K_DOWN | PAD_CTL_SPEED_LOW |	\
+		PAD_CTL_DSE_80ohm | PAD_CTL_SRE_FAST | PAD_CTL_HYS),
+	/*
+	 * Originally MX6Q_PAD_GPIO_1__USBOTG_ID, but we want it to be
+	 * pulled down ID pin for fixed host connection.
+	 */
+
+	/* USB power enable pins */
+	MX6DL_PAD_EIM_D22__GPIO_3_22,
+	MX6DL_PAD_GPIO_0__GPIO_1_0,
+
+	/* USB OC pin */
+	MX6DL_PAD_KEY_COL4__USBOH3_USBOTG_OC,
+	MX6DL_PAD_GPIO_3__USBOH3_USBH1_OC,
+
+	/* USDHC2 */
+	MX6DL_PAD_SD2_CLK__USDHC2_CLK,
+	MX6DL_PAD_SD2_CMD__USDHC2_CMD,
+	MX6DL_PAD_SD2_DAT0__USDHC2_DAT0,
+	MX6DL_PAD_SD2_DAT1__USDHC2_DAT1,
+	MX6DL_PAD_SD2_DAT2__USDHC2_DAT2,
+	MX6DL_PAD_SD2_DAT3__USDHC2_DAT3,
+	MX6DL_PAD_GPIO_4__USDHC2_CD,		/* SD2_CD */
+
+	/* IR in */
+	MX6DL_PAD_GPIO_2__GPIO_1_2,
+};
+
+#endif
diff --git a/arch/arm/mach-mx6/board-mx6q_c1.c b/arch/arm/mach-mx6/board-mx6q_c1.c
deleted file mode 100644
index 9f515aa..0000000
--- a/arch/arm/mach-mx6/board-mx6q_c1.c
+++ /dev/null
@@ -1,394 +0,0 @@
-/*
- * Copyright (C) 2013 SolidRun ltd.
- * Based on sabresd board from Freescale Semiconductor, Inc. All Rights Reserved
- *
- * This program is free software; you can redistribute it and/or modify
- * it under the terms of the GNU General Public License as published by
- * the Free Software Foundation; either version 2 of the License, or
- * (at your option) any later version.
-
- * This program is distributed in the hope that it will be useful,
- * but WITHOUT ANY WARRANTY; without even the implied warranty of
- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
- * GNU General Public License for more details.
-
- * You should have received a copy of the GNU General Public License along
- * with this program; if not, write to the Free Software Foundation, Inc.,
- * 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.
- */
-
-#include <linux/types.h>
-#include <linux/sched.h>
-#include <linux/delay.h>
-#include <linux/pm.h>
-#include <linux/interrupt.h>
-#include <linux/irq.h>
-#include <linux/init.h>
-#include <linux/input.h>
-#include <linux/nodemask.h>
-#include <linux/clk.h>
-#include <linux/platform_device.h>
-#include <linux/fsl_devices.h>
-#include <linux/spi/spi.h>
-#include <linux/spi/flash.h>
-#include <linux/i2c.h>
-#include <linux/i2c/pca953x.h>
-#include <linux/ata.h>
-#include <linux/mtd/mtd.h>
-#include <linux/mtd/map.h>
-#include <linux/mtd/partitions.h>
-#include <linux/regulator/consumer.h>
-#include <linux/pmic_external.h>
-#include <linux/pmic_status.h>
-#include <linux/ipu.h>
-#include <linux/mxcfb.h>
-#include <linux/pwm_backlight.h>
-#include <linux/fec.h>
-#include <linux/memblock.h>
-#include <linux/gpio.h>
-#include <linux/etherdevice.h>
-#include <linux/regulator/anatop-regulator.h>
-#include <linux/regulator/consumer.h>
-#include <linux/regulator/machine.h>
-#include <linux/regulator/fixed.h>
-#ifdef CONFIG_IR_GPIO_CIR
-#include <media/gpio-ir-recv.h>
-#endif
-
-#include <mach/common.h>
-#include <mach/hardware.h>
-#include <mach/mxc_dvfs.h>
-#include <mach/memory.h>
-#include <mach/iomux-mx6q.h>
-#include <mach/imx-uart.h>
-#include <mach/ipu-v3.h>
-#include <mach/mxc_asrc.h>
-#include <mach/mipi_dsi.h>
-#include <mach/system.h>
-#include <mach/imx_rfkill.h>
-
-#include <asm/irq.h>
-#include <asm/setup.h>
-#include <asm/mach-types.h>
-#include <asm/mach/arch.h>
-#include <asm/mach/time.h>
-
-#include "usb.h"
-#include "devices-imx6q.h"
-#include "crm_regs.h"
-#include "cpu_op-mx6.h"
-#include "board-mx6q_c1.h"
-#include "board-mx6dl_c1.h"
-
-#define GPIO_IR_IN		IMX_GPIO_NR(1, 2)
-// #define GPIO_IR_IN		IMX_GPIO_NR(3, 9) CuBox-i
-#define C1_USB_OTG_PWR	IMX_GPIO_NR(3, 22)
-#define C1_USB_H1_PWR		IMX_GPIO_NR(1, 0)
-#ifdef CONFIG_MX6_ENET_IRQ_TO_GPIO
-#define MX6_ENET_IRQ		IMX_GPIO_NR(4, 18) /* TODO */
-#endif
-
-static int caam_enabled;
-extern char *gp_reg_id;
-extern char *soc_reg_id;
-extern char *pu_reg_id;
-
-static const struct esdhc_platform_data mx6q_c1_sd2_data __initconst = {
-	.keep_power_at_suspend = 1,
-	.support_8bit = 0,
-	.delay_line = 0,
-	.cd_type = ESDHC_CD_CONTROLLER,
-};
-
-static struct imxi2c_platform_data mx6q_c1_i2c_data = {
-	.bitrate = 100000,
-};
-
-/* I2C1 */
-static struct i2c_board_info mxc_i2c0_board_info[] __initdata = {
-};
-
-/* I2C3 */
-static struct i2c_board_info mxc_i2c2_board_info[] __initdata = {
-	{
-		I2C_BOARD_INFO("pcf8523", 0x68),
-	},
-};
-
-static const struct imx_pcie_platform_data mx6_c1_pcie_data __initconst = {
-	.pcie_pwr_en	= -EINVAL,
-	.pcie_rst	= -EINVAL,
-	.pcie_wake_up	= -EINVAL,
-	.pcie_dis	= -EINVAL,
-};
-
-static void imx6q_c1_usbotg_vbus(bool on)
-{
-	if (on)
-		gpio_set_value(C1_USB_OTG_PWR, 1);
-	else
-		gpio_set_value(C1_USB_OTG_PWR, 0);
-}
-
-static void imx6q_c1_host1_vbus(bool on)
-{
-	if (on)
-		gpio_set_value(C1_USB_H1_PWR, 1);
-	else
-		gpio_set_value(C1_USB_H1_PWR, 0);
-}
-
-static void __init imx6q_c1_init_usb(void)
-{
-	int ret = 0;
-	imx_otg_base = MX6_IO_ADDRESS(MX6Q_USB_OTG_BASE_ADDR);
-	/* disable external charger detect,
-	 * or it will affect signal quality at dp .
-	 */
-	ret = gpio_request(C1_USB_OTG_PWR, "usb-pwr");
-	if (ret) {
-		pr_err("failed to get GPIO C1_USB_OTG_PWR: %d\n",
-			ret);
-		return;
-	}
-	gpio_direction_output(C1_USB_OTG_PWR, 0);
-	/* keep USB host1 VBUS always on */
-	ret = gpio_request(C1_USB_H1_PWR, "usb-h1-pwr");
-	if (ret) {
-		pr_err("failed to get GPIO C1_USB_H1_PWR: %d\n",
-			ret);
-		return;
-	}
-	gpio_direction_output(C1_USB_H1_PWR, 0);
-	/*
-	 * ID pin is sampled from GPIO_1. Notice that this pad is configured
-	 * to be pulled-down 100kOhm by default.
-	 */
-	mxc_iomux_set_gpr_register(1, 13, 1, 1);
-
-	mx6_set_otghost_vbus_func(imx6q_c1_usbotg_vbus);
-	mx6_set_host1_vbus_func(imx6q_c1_host1_vbus);
-}
-
-struct imx_vout_mem {
-	resource_size_t res_mbase;
-	resource_size_t res_msize;
-};
-
-static struct imx_vout_mem vout_mem __initdata = {
-	.res_msize = SZ_128M,
-};
-
-static struct regulator_consumer_supply c1_vmmc_consumers[] = {
-	REGULATOR_SUPPLY("vmmc", "sdhci-esdhc-imx.1"),
-	REGULATOR_SUPPLY("vmmc", "sdhci-esdhc-imx.2"),
-};
-
-static struct regulator_init_data c1_vmmc_init = {
-	.num_consumer_supplies = ARRAY_SIZE(c1_vmmc_consumers),
-	.consumer_supplies = c1_vmmc_consumers,
-};
-
-static struct fixed_voltage_config c1_vmmc_reg_config = {
-	.supply_name		= "vmmc",
-	.microvolts		= 3300000,
-	.gpio			= -1,
-	.init_data		= &c1_vmmc_init,
-};
-
-static struct platform_device c1_vmmc_reg_devices = {
-	.name	= "reg-fixed-voltage",
-	.id	= 3,
-	.dev	= {
-		.platform_data = &c1_vmmc_reg_config,
-	},
-};
-
-
-static struct viv_gpu_platform_data imx6q_gpu_pdata __initdata = {
-	.reserved_mem_size = SZ_128M,
-};
-
-static struct imx_asrc_platform_data imx_asrc_data = {
-	.channel_bits = 4,
-	.clk_map_ver = 2,
-};
-
-static int spdif_clk_set_rate(struct clk *clk, unsigned long rate)
-{
-	unsigned long rate_actual;
-	rate_actual = clk_round_rate(clk, rate);
-	clk_set_rate(clk, rate_actual);
-	return 0;
-}
-
-static struct mxc_spdif_platform_data mxc_spdif_data = {
-	.spdif_tx		= 1,		/* enable tx */
-	.spdif_rx		= 0,		/* enable rx */
-	/*
-	 * spdif0_clk will be 454.7MHz divided by ccm dividers.
-	 *
-	 * 44.1KHz: 454.7MHz / 7 (ccm) / 23 (spdif) = 44,128 Hz ~ 0.06% error
-	 * 48KHz:   454.7MHz / 4 (ccm) / 37 (spdif) = 48,004 Hz ~ 0.01% error
-	 * 32KHz:   454.7MHz / 6 (ccm) / 37 (spdif) = 32,003 Hz ~ 0.01% error
-	 */
-	.spdif_clk_44100	= 1,    /* tx clk from spdif0_clk_root */
-	.spdif_clk_48000	= 1,    /* tx clk from spdif0_clk_root */
-	.spdif_div_44100	= 23,
-	.spdif_div_48000	= 37,
-	.spdif_div_32000	= 37,
-	.spdif_clk_set_rate	= spdif_clk_set_rate,
-	.spdif_clk		= NULL, /* spdif bus clk */
-};
-
-static struct imx_esai_platform_data sab_esai_pdata = {
-	.flags	= IMX_ESAI_NET,
-};
-static int __init imx6q_init_audio(void)
-{
-	struct clk *pll3_pfd, *esai_clk;
-	imx6q_add_imx_esai(0, &sab_esai_pdata);
-
-	esai_clk = clk_get(NULL, "esai_clk");
-	if (IS_ERR(esai_clk))
-		return PTR_ERR(esai_clk);
-
-	pll3_pfd = clk_get(NULL, "pll3_pfd_508M");
-	if (IS_ERR(pll3_pfd))
-		return PTR_ERR(pll3_pfd);
-
-	clk_set_parent(esai_clk, pll3_pfd);
-	clk_set_rate(esai_clk, 101647058);
-
-	return 0;
-}
-
-#ifdef CONFIG_IR_GPIO_CIR
-static struct gpio_ir_recv_platform_data c1_ir_data = {
-	.gpio_nr = GPIO_IR_IN,
-	.active_low = 1,
-};
-
-static struct platform_device c1_ir = {
-        .name   = "gpio-rc-recv",
-	.id     = -1,
-	.dev    = {
-		.platform_data  = &c1_ir_data,
-	}
-};
-#endif
-
-#if 0
-/* Following will activate the analog audio out for testing */
-static struct platform_pwm_backlight_data mx6_c1_pwm_dummy1_backlight_data = {
-	.pwm_id = 0,
-	.max_brightness = 200,
-	.dft_brightness = 128,
-	.pwm_period_ns = 5000000,
-};
-
-static struct platform_pwm_backlight_data mx6_c1_pwm_dummy2_backlight_data = {
-	.pwm_id = 1,
-	.max_brightness = 201,
-	.dft_brightness = 128,
-	.pwm_period_ns = 1000000,
-};
-#endif
-
-static struct platform_pwm_backlight_data mx6_c1_pwm_lvds_backlight_data = {
-	.pwm_id = 2,
-	.max_brightness = 248,
-	.dft_brightness = 128,
-	.pwm_period_ns = 50000,
-};
-
-static struct platform_pwm_backlight_data mx6_c1_pwm_dsi_backlight_data = {
-	.pwm_id = 3,
-	.max_brightness = 203,
-	.dft_brightness = 128,
-	.pwm_period_ns = 50000,
-};
-
-static int __init caam_setup(char *__unused)
-{
-	caam_enabled = 1;
-	return 1;
-}
-early_param("caam", caam_setup);
-
-/*
- * Board specific initialization.
- */
-/* Following to be exported to an .h file for the microsom */
-extern void __init mx6_usom_board_init(void); 
-extern void __init fixup_usom_board(struct machine_desc *desc, struct tag *tags,
-					char **cmdline, struct meminfo *mi);
-extern void __init mx6q_usom_reserve(void);
-extern struct sys_timer mx6_usom_timer;
-extern struct viv_gpu_platform_data imx6q_gpu_pdata;
-
-static void __init mx6_c1_board_init(void)
-{
-	if (cpu_is_mx6q())
-		mxc_iomux_v3_setup_multiple_pads(mx6q_c1_pads,
-			ARRAY_SIZE(mx6q_c1_pads));
-	else if (cpu_is_mx6dl()) {
-		mxc_iomux_v3_setup_multiple_pads(mx6dl_c1_pads,
-			ARRAY_SIZE(mx6dl_c1_pads));
-	}
-	mx6_usom_board_init();
-	imx6q_add_imx_uart(0, NULL);
-
-	imx6q_add_imx_i2c(0, &mx6q_c1_i2c_data);
-	imx6q_add_imx_i2c(2, &mx6q_c1_i2c_data);
-	i2c_register_board_info(0, mxc_i2c0_board_info, /* I2C1 */
-			ARRAY_SIZE(mxc_i2c0_board_info));
-	i2c_register_board_info(2, mxc_i2c2_board_info, /* I2C3 */
-			ARRAY_SIZE(mxc_i2c2_board_info));
-
-	imx6q_add_sdhci_usdhc_imx(1, &mx6q_c1_sd2_data);
-//	imx_add_viv_gpu(&imx6_gpu_data, &imx6q_gpu_pdata);
-	imx6q_c1_init_usb();
-
-	imx6q_init_audio();
-	platform_device_register(&c1_vmmc_reg_devices);
-	imx_asrc_data.asrc_core_clk = clk_get(NULL, "asrc_clk");
-	imx_asrc_data.asrc_audio_clk = clk_get(NULL, "asrc_serial_clk");
-	imx6q_add_asrc(&imx_asrc_data);
-
-	imx6q_add_mxc_pwm(0);
-	imx6q_add_mxc_pwm(1);
-	imx6q_add_mxc_pwm(2);
-	imx6q_add_mxc_pwm(3);
-	imx6q_add_mxc_pwm_backlight(0, &mx6_c1_pwm_lvds_backlight_data);
-	imx6q_add_mxc_pwm_backlight(1, &mx6_c1_pwm_dsi_backlight_data);
-#if 0
-	imx6q_add_mxc_pwm_backlight(2, &mx6_c1_pwm_dummy1_backlight_data);
-	imx6q_add_mxc_pwm_backlight(3, &mx6_c1_pwm_dummy2_backlight_data);
-#endif
-	mxc_spdif_data.spdif_core_clk = clk_get_sys("mxc_spdif.0", NULL);
-	clk_put(mxc_spdif_data.spdif_core_clk);
-	imx6q_add_spdif(&mxc_spdif_data);
-	imx6q_add_spdif_dai();
-	imx6q_add_spdif_audio_device();
-	/* Add PCIe RC interface support */
-	imx6q_add_pcie(&mx6_c1_pcie_data);
-#ifdef CONFIG_IR_GPIO_CIR
-	/* Register the infra red receiver as a GPIO device */
-	platform_device_register(&c1_ir);
-#endif
-}
-
-/*
- * initialize __mach_desc_MX6Q_C1 data structure.
- */
-MACHINE_START(C1, "SolidRun i.MX 6Quad/Dual/DualLite/Solo Carrier One Board")
-	/* Maintainer: Freescale Semiconductor, Inc. */
-	.boot_params = MX6_PHYS_OFFSET + 0x100,
-	.fixup = fixup_usom_board,
-	.map_io = mx6_map_io,
-	.init_irq = mx6_init_irq,
-	.init_machine = mx6_c1_board_init,
-	.timer = &mx6_usom_timer,
-	.reserve = mx6q_usom_reserve,
-MACHINE_END
diff --git a/arch/arm/mach-mx6/board-mx6q_c1.h b/arch/arm/mach-mx6/board-mx6q_c1.h
deleted file mode 100644
index 2edc7e9..0000000
--- a/arch/arm/mach-mx6/board-mx6q_c1.h
+++ /dev/null
@@ -1,98 +0,0 @@
-/*
- * Copyright (C) 2013 SolidRun ltd.
- * Based on sabresd board from Freescale Semiconductor, Inc. All Rights Reserved
- *
- * This program is free software; you can redistribute it and/or modify
- * it under the terms of the GNU General Public License as published by
- * the Free Software Foundation; either version 2 of the License, or
- * (at your option) any later version.
-
- * This program is distributed in the hope that it will be useful,
- * but WITHOUT ANY WARRANTY; without even the implied warranty of
- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
- * GNU General Public License for more details.
-
- * You should have received a copy of the GNU General Public License along
- * with this program; if not, write to the Free Software Foundation, Inc.,
- * 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.
- */
-
-#ifndef _BOARD_MX6Q_C1_H
-#define _BOARD_MX6Q_C1_H
-
-#include <mach/iomux-mx6q.h>
-
-static iomux_v3_cfg_t mx6q_c1_pads[] = {
-	/* SPDIF out */
-	MX6Q_PAD_GPIO_17__SPDIF_OUT1,
-
-	/* CAN1  */
-	MX6Q_PAD_SD3_CLK__CAN1_RXCAN,
-	MX6Q_PAD_SD3_CMD__CAN1_TXCAN,
-
-	/* CCM  */
-	MX6Q_PAD_GPIO_5__CCM_CLKO,		/* SGTL500 sys_mclk */
-	MX6Q_PAD_NANDF_CS2__CCM_CLKO2,		/* MIPI CSI clock */
-
-	/* ECSPI2 */
-	MX6Q_PAD_EIM_CS0__ECSPI2_SCLK,
-	MX6Q_PAD_EIM_CS1__ECSPI2_MOSI,
-	MX6Q_PAD_EIM_OE__ECSPI2_MISO,
-	MX6Q_PAD_EIM_RW__ECSPI2_SS0,
-	MX6Q_PAD_EIM_LBA__ECSPI2_SS1,
-
-	/* I2C1 */
-	MX6Q_PAD_EIM_D21__I2C1_SCL,
-	MX6Q_PAD_EIM_D28__I2C1_SDA,
-
-	/* I2C3 */
-	MX6Q_PAD_EIM_D17__I2C3_SCL,
-	MX6Q_PAD_EIM_D18__I2C3_SDA,
-
-	/* PWM */
-	MX6Q_PAD_DISP0_DAT8__PWM1_PWMO,
-	MX6Q_PAD_DISP0_DAT9__PWM2_PWMO,
-	MX6Q_PAD_SD4_DAT1__PWM3_PWMO,
-	MX6Q_PAD_SD4_DAT2__PWM4_PWMO,
-
-	/* UART1 for debug */
-	MX6Q_PAD_CSI0_DAT10__UART1_TXD,
-	MX6Q_PAD_CSI0_DAT11__UART1_RXD,
-
-	/* UART2 RX, TX, CTS and RTS */
-	MX6Q_PAD_SD4_DAT4__UART2_RXD,
-	MX6Q_PAD_SD4_DAT5__UART2_RTS,
-	MX6Q_PAD_SD4_DAT6__UART2_CTS,
-	MX6Q_PAD_SD4_DAT7__UART2_TXD,
-
-	/* USBOTG ID pin */
-	IOMUX_PAD(0x05F4, 0x0224, 3, 0x0000, 0, (PAD_CTL_PKE | PAD_CTL_PUE | \
-		PAD_CTL_PUS_100K_DOWN | PAD_CTL_SPEED_LOW |	\
-		PAD_CTL_DSE_80ohm | PAD_CTL_SRE_FAST | PAD_CTL_HYS)),
-	/*
-	 * Originally MX6Q_PAD_GPIO_1__USBOTG_ID, but we want it to be
-	 * pulled down ID pin for fixed host connection.
-	 */
-
-	/* USB power enable pins */
-	MX6Q_PAD_EIM_D22__GPIO_3_22,
-	MX6Q_PAD_GPIO_0__GPIO_1_0,
-
-	/* USB OC pin */
-	MX6Q_PAD_KEY_COL4__USBOH3_USBOTG_OC,
-	MX6Q_PAD_GPIO_3__USBOH3_USBH1_OC,
-
-	/* USDHC2 */
-	MX6Q_PAD_SD2_CLK__USDHC2_CLK,
-	MX6Q_PAD_SD2_CMD__USDHC2_CMD,
-	MX6Q_PAD_SD2_DAT0__USDHC2_DAT0,
-	MX6Q_PAD_SD2_DAT1__USDHC2_DAT1,
-	MX6Q_PAD_SD2_DAT2__USDHC2_DAT2,
-	MX6Q_PAD_SD2_DAT3__USDHC2_DAT3,
-	MX6Q_PAD_GPIO_4__USDHC2_CD,		/* SD2_CD */
-
-	/* IR in */
-	MX6Q_PAD_GPIO_2__GPIO_1_2,
-};
-
-#endif
diff --git a/arch/arm/mach-mx6/board-mx6q_hb.c b/arch/arm/mach-mx6/board-mx6q_hb.c
new file mode 100644
index 0000000..ac1a347
--- /dev/null
+++ b/arch/arm/mach-mx6/board-mx6q_hb.c
@@ -0,0 +1,393 @@
+/*
+ * Copyright (C) 2013 SolidRun ltd.
+ * Based on sabresd board from Freescale Semiconductor, Inc. All Rights Reserved
+ *
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 2 of the License, or
+ * (at your option) any later version.
+
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+
+ * You should have received a copy of the GNU General Public License along
+ * with this program; if not, write to the Free Software Foundation, Inc.,
+ * 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.
+ */
+
+#include <linux/types.h>
+#include <linux/sched.h>
+#include <linux/delay.h>
+#include <linux/pm.h>
+#include <linux/interrupt.h>
+#include <linux/irq.h>
+#include <linux/init.h>
+#include <linux/input.h>
+#include <linux/nodemask.h>
+#include <linux/clk.h>
+#include <linux/platform_device.h>
+#include <linux/fsl_devices.h>
+#include <linux/spi/spi.h>
+#include <linux/spi/flash.h>
+#include <linux/i2c.h>
+#include <linux/i2c/pca953x.h>
+#include <linux/ata.h>
+#include <linux/mtd/mtd.h>
+#include <linux/mtd/map.h>
+#include <linux/mtd/partitions.h>
+#include <linux/regulator/consumer.h>
+#include <linux/pmic_external.h>
+#include <linux/pmic_status.h>
+#include <linux/ipu.h>
+#include <linux/mxcfb.h>
+#include <linux/pwm_backlight.h>
+#include <linux/fec.h>
+#include <linux/memblock.h>
+#include <linux/gpio.h>
+#include <linux/etherdevice.h>
+#include <linux/regulator/anatop-regulator.h>
+#include <linux/regulator/consumer.h>
+#include <linux/regulator/machine.h>
+#include <linux/regulator/fixed.h>
+#ifdef CONFIG_IR_GPIO_CIR
+#include <media/gpio-ir-recv.h>
+#endif
+
+#include <mach/common.h>
+#include <mach/hardware.h>
+#include <mach/mxc_dvfs.h>
+#include <mach/memory.h>
+#include <mach/iomux-mx6q.h>
+#include <mach/imx-uart.h>
+#include <mach/ipu-v3.h>
+#include <mach/mxc_asrc.h>
+#include <mach/mipi_dsi.h>
+#include <mach/system.h>
+#include <mach/imx_rfkill.h>
+
+#include <asm/irq.h>
+#include <asm/setup.h>
+#include <asm/mach-types.h>
+#include <asm/mach/arch.h>
+#include <asm/mach/time.h>
+
+#include "usb.h"
+#include "devices-imx6q.h"
+#include "crm_regs.h"
+#include "cpu_op-mx6.h"
+#include "board-mx6q_hb.h"
+#include "board-mx6dl_hb.h"
+
+#define GPIO_IR_IN		IMX_GPIO_NR(1, 2)
+#define HB_USB_OTG_PWR	IMX_GPIO_NR(3, 22)
+#define HB_USB_H1_PWR		IMX_GPIO_NR(1, 0)
+#ifdef CONFIG_MX6_ENET_IRQ_TO_GPIO
+#define MX6_ENET_IRQ		IMX_GPIO_NR(4, 18) /* TODO */
+#endif
+
+static int caam_enabled;
+extern char *gp_reg_id;
+extern char *soc_reg_id;
+extern char *pu_reg_id;
+
+static const struct esdhc_platform_data mx6q_hb_sd2_data __initconst = {
+	.keep_power_at_suspend = 1,
+	.support_8bit = 0,
+	.delay_line = 0,
+	.cd_type = ESDHC_CD_CONTROLLER,
+};
+
+static struct imxi2c_platform_data mx6q_hb_i2c_data = {
+	.bitrate = 100000,
+};
+
+/* I2C1 */
+static struct i2c_board_info mxc_i2c0_board_info[] __initdata = {
+};
+
+/* I2C3 */
+static struct i2c_board_info mxc_i2c2_board_info[] __initdata = {
+	{
+		I2C_BOARD_INFO("pcf8523", 0x68),
+	},
+};
+
+static const struct imx_pcie_platform_data mx6_hb_pcie_data __initconst = {
+	.pcie_pwr_en	= -EINVAL,
+	.pcie_rst	= -EINVAL,
+	.pcie_wake_up	= -EINVAL,
+	.pcie_dis	= -EINVAL,
+};
+
+static void imx6q_hb_usbotg_vbus(bool on)
+{
+	if (on)
+		gpio_set_value(HB_USB_OTG_PWR, 1);
+	else
+		gpio_set_value(HB_USB_OTG_PWR, 0);
+}
+
+static void imx6q_hb_host1_vbus(bool on)
+{
+	if (on)
+		gpio_set_value(HB_USB_H1_PWR, 1);
+	else
+		gpio_set_value(HB_USB_H1_PWR, 0);
+}
+
+static void __init imx6q_hb_init_usb(void)
+{
+	int ret = 0;
+	imx_otg_base = MX6_IO_ADDRESS(MX6Q_USB_OTG_BASE_ADDR);
+	/* disable external charger detect,
+	 * or it will affect signal quality at dp .
+	 */
+	ret = gpio_request(HB_USB_OTG_PWR, "usb-pwr");
+	if (ret) {
+		pr_err("failed to get GPIO HB_USB_OTG_PWR: %d\n",
+			ret);
+		return;
+	}
+	gpio_direction_output(HB_USB_OTG_PWR, 0);
+	/* keep USB host1 VBUS always on */
+	ret = gpio_request(HB_USB_H1_PWR, "usb-h1-pwr");
+	if (ret) {
+		pr_err("failed to get GPIO HB_USB_H1_PWR: %d\n",
+			ret);
+		return;
+	}
+	gpio_direction_output(HB_USB_H1_PWR, 0);
+	/*
+	 * ID pin is sampled from GPIO_1. Notice that this pad is configured
+	 * to be pulled-down 100kOhm by default.
+	 */
+	mxc_iomux_set_gpr_register(1, 13, 1, 1);
+
+	mx6_set_otghost_vbus_func(imx6q_hb_usbotg_vbus);
+	mx6_set_host1_vbus_func(imx6q_hb_host1_vbus);
+}
+
+struct imx_vout_mem {
+	resource_size_t res_mbase;
+	resource_size_t res_msize;
+};
+
+static struct imx_vout_mem vout_mem __initdata = {
+	.res_msize = SZ_128M,
+};
+
+static struct regulator_consumer_supply hb_vmmc_consumers[] = {
+	REGULATOR_SUPPLY("vmmc", "sdhci-esdhc-imx.1"),
+	REGULATOR_SUPPLY("vmmc", "sdhci-esdhc-imx.2"),
+};
+
+static struct regulator_init_data hb_vmmc_init = {
+	.num_consumer_supplies = ARRAY_SIZE(hb_vmmc_consumers),
+	.consumer_supplies = hb_vmmc_consumers,
+};
+
+static struct fixed_voltage_config hb_vmmc_reg_config = {
+	.supply_name		= "vmmc",
+	.microvolts		= 3300000,
+	.gpio			= -1,
+	.init_data		= &hb_vmmc_init,
+};
+
+static struct platform_device hb_vmmc_reg_devices = {
+	.name	= "reg-fixed-voltage",
+	.id	= 3,
+	.dev	= {
+		.platform_data = &hb_vmmc_reg_config,
+	},
+};
+
+
+static struct viv_gpu_platform_data imx6q_gpu_pdata __initdata = {
+	.reserved_mem_size = SZ_128M,
+};
+
+static struct imx_asrc_platform_data imx_asrc_data = {
+	.channel_bits = 4,
+	.clk_map_ver = 2,
+};
+
+static int spdif_clk_set_rate(struct clk *clk, unsigned long rate)
+{
+	unsigned long rate_actual;
+	rate_actual = clk_round_rate(clk, rate);
+	clk_set_rate(clk, rate_actual);
+	return 0;
+}
+
+static struct mxc_spdif_platform_data mxc_spdif_data = {
+	.spdif_tx		= 1,		/* enable tx */
+	.spdif_rx		= 0,		/* enable rx */
+	/*
+	 * spdif0_clk will be 454.7MHz divided by ccm dividers.
+	 *
+	 * 44.1KHz: 454.7MHz / 7 (ccm) / 23 (spdif) = 44,128 Hz ~ 0.06% error
+	 * 48KHz:   454.7MHz / 4 (ccm) / 37 (spdif) = 48,004 Hz ~ 0.01% error
+	 * 32KHz:   454.7MHz / 6 (ccm) / 37 (spdif) = 32,003 Hz ~ 0.01% error
+	 */
+	.spdif_clk_44100	= 1,    /* tx clk from spdif0_clk_root */
+	.spdif_clk_48000	= 1,    /* tx clk from spdif0_clk_root */
+	.spdif_div_44100	= 23,
+	.spdif_div_48000	= 37,
+	.spdif_div_32000	= 37,
+	.spdif_clk_set_rate	= spdif_clk_set_rate,
+	.spdif_clk		= NULL, /* spdif bus clk */
+};
+
+static struct imx_esai_platform_data sab_esai_pdata = {
+	.flags	= IMX_ESAI_NET,
+};
+static int __init imx6q_init_audio(void)
+{
+	struct clk *pll3_pfd, *esai_clk;
+	imx6q_add_imx_esai(0, &sab_esai_pdata);
+
+	esai_clk = clk_get(NULL, "esai_clk");
+	if (IS_ERR(esai_clk))
+		return PTR_ERR(esai_clk);
+
+	pll3_pfd = clk_get(NULL, "pll3_pfd_508M");
+	if (IS_ERR(pll3_pfd))
+		return PTR_ERR(pll3_pfd);
+
+	clk_set_parent(esai_clk, pll3_pfd);
+	clk_set_rate(esai_clk, 101647058);
+
+	return 0;
+}
+
+#ifdef CONFIG_IR_GPIO_CIR
+static struct gpio_ir_recv_platform_data hb_ir_data = {
+	.gpio_nr = GPIO_IR_IN,
+	.active_low = 1,
+};
+
+static struct platform_device hb_ir = {
+        .name   = "gpio-rc-recv",
+	.id     = -1,
+	.dev    = {
+		.platform_data  = &hb_ir_data,
+	}
+};
+#endif
+
+#if 0
+/* Following will activate the analog audio out for testing */
+static struct platform_pwm_backlight_data mx6_hb_pwm_dummy1_backlight_data = {
+	.pwm_id = 0,
+	.max_brightness = 200,
+	.dft_brightness = 128,
+	.pwm_period_ns = 5000000,
+};
+
+static struct platform_pwm_backlight_data mx6_hb_pwm_dummy2_backlight_data = {
+	.pwm_id = 1,
+	.max_brightness = 201,
+	.dft_brightness = 128,
+	.pwm_period_ns = 1000000,
+};
+#endif
+
+static struct platform_pwm_backlight_data mx6_hb_pwm_lvds_backlight_data = {
+	.pwm_id = 2,
+	.max_brightness = 248,
+	.dft_brightness = 128,
+	.pwm_period_ns = 50000,
+};
+
+static struct platform_pwm_backlight_data mx6_hb_pwm_dsi_backlight_data = {
+	.pwm_id = 3,
+	.max_brightness = 203,
+	.dft_brightness = 128,
+	.pwm_period_ns = 50000,
+};
+
+static int __init caam_setup(char *__unused)
+{
+	caam_enabled = 1;
+	return 1;
+}
+early_param("caam", caam_setup);
+
+/*
+ * Board specific initialization.
+ */
+/* Following to be exported to an .h file for the microsom */
+extern void __init mx6_usom_board_init(void); 
+extern void __init fixup_usom_board(struct machine_desc *desc, struct tag *tags,
+					char **cmdline, struct meminfo *mi);
+extern void __init mx6q_usom_reserve(void);
+extern struct sys_timer mx6_usom_timer;
+extern struct viv_gpu_platform_data imx6q_gpu_pdata;
+
+static void __init mx6_hb_board_init(void)
+{
+	if (cpu_is_mx6q())
+		mxc_iomux_v3_setup_multiple_pads(mx6q_hb_pads,
+			ARRAY_SIZE(mx6q_hb_pads));
+	else if (cpu_is_mx6dl()) {
+		mxc_iomux_v3_setup_multiple_pads(mx6dl_hb_pads,
+			ARRAY_SIZE(mx6dl_hb_pads));
+	}
+	mx6_usom_board_init();
+	imx6q_add_imx_uart(0, NULL);
+
+	imx6q_add_imx_i2c(0, &mx6q_hb_i2c_data);
+	imx6q_add_imx_i2c(2, &mx6q_hb_i2c_data);
+	i2c_register_board_info(0, mxc_i2c0_board_info, /* I2C1 */
+			ARRAY_SIZE(mxc_i2c0_board_info));
+	i2c_register_board_info(2, mxc_i2c2_board_info, /* I2C3 */
+			ARRAY_SIZE(mxc_i2c2_board_info));
+
+	imx6q_add_sdhci_usdhc_imx(1, &mx6q_hb_sd2_data);
+//	imx_add_viv_gpu(&imx6_gpu_data, &imx6q_gpu_pdata);
+	imx6q_hb_init_usb();
+
+	imx6q_init_audio();
+	platform_device_register(&hb_vmmc_reg_devices);
+	imx_asrc_data.asrc_core_clk = clk_get(NULL, "asrc_clk");
+	imx_asrc_data.asrc_audio_clk = clk_get(NULL, "asrc_serial_clk");
+	imx6q_add_asrc(&imx_asrc_data);
+
+	imx6q_add_mxc_pwm(0);
+	imx6q_add_mxc_pwm(1);
+	imx6q_add_mxc_pwm(2);
+	imx6q_add_mxc_pwm(3);
+	imx6q_add_mxc_pwm_backlight(0, &mx6_hb_pwm_lvds_backlight_data);
+	imx6q_add_mxc_pwm_backlight(1, &mx6_hb_pwm_dsi_backlight_data);
+#if 0
+	imx6q_add_mxc_pwm_backlight(2, &mx6_hb_pwm_dummy1_backlight_data);
+	imx6q_add_mxc_pwm_backlight(3, &mx6_hb_pwm_dummy2_backlight_data);
+#endif
+	mxc_spdif_data.spdif_core_clk = clk_get_sys("mxc_spdif.0", NULL);
+	clk_put(mxc_spdif_data.spdif_core_clk);
+	imx6q_add_spdif(&mxc_spdif_data);
+	imx6q_add_spdif_dai();
+	imx6q_add_spdif_audio_device();
+	/* Add PCIe RC interface support */
+	imx6q_add_pcie(&mx6_hb_pcie_data);
+#ifdef CONFIG_IR_GPIO_CIR
+	/* Register the infra red receiver as a GPIO device */
+	platform_device_register(&hb_ir);
+#endif
+}
+
+/*
+ * initialize __mach_desc_MX6Q_HB data structure.
+ */
+MACHINE_START(HB, "SolidRun i.MX 6Quad/Dual/DualLite/Solo HummingBoard")
+	/* Maintainer: Freescale Semiconductor, Inc. */
+	.boot_params = MX6_PHYS_OFFSET + 0x100,
+	.fixup = fixup_usom_board,
+	.map_io = mx6_map_io,
+	.init_irq = mx6_init_irq,
+	.init_machine = mx6_hb_board_init,
+	.timer = &mx6_usom_timer,
+	.reserve = mx6q_usom_reserve,
+MACHINE_END
diff --git a/arch/arm/mach-mx6/board-mx6q_hb.h b/arch/arm/mach-mx6/board-mx6q_hb.h
new file mode 100644
index 0000000..8bd8620
--- /dev/null
+++ b/arch/arm/mach-mx6/board-mx6q_hb.h
@@ -0,0 +1,98 @@
+/*
+ * Copyright (C) 2013 SolidRun ltd.
+ * Based on sabresd board from Freescale Semiconductor, Inc. All Rights Reserved
+ *
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 2 of the License, or
+ * (at your option) any later version.
+
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+
+ * You should have received a copy of the GNU General Public License along
+ * with this program; if not, write to the Free Software Foundation, Inc.,
+ * 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.
+ */
+
+#ifndef _BOARD_MX6Q_HB_H
+#define _BOARD_MX6Q_HB_H
+
+#include <mach/iomux-mx6q.h>
+
+static iomux_v3_cfg_t mx6q_hb_pads[] = {
+	/* SPDIF out */
+	MX6Q_PAD_GPIO_17__SPDIF_OUT1,
+
+	/* CAN1  */
+	MX6Q_PAD_SD3_CLK__CAN1_RXCAN,
+	MX6Q_PAD_SD3_CMD__CAN1_TXCAN,
+
+	/* CCM  */
+	MX6Q_PAD_GPIO_5__CCM_CLKO,		/* SGTL500 sys_mclk */
+	MX6Q_PAD_NANDF_CS2__CCM_CLKO2,		/* MIPI CSI clock */
+
+	/* ECSPI2 */
+	MX6Q_PAD_EIM_CS0__ECSPI2_SCLK,
+	MX6Q_PAD_EIM_CS1__ECSPI2_MOSI,
+	MX6Q_PAD_EIM_OE__ECSPI2_MISO,
+	MX6Q_PAD_EIM_RW__ECSPI2_SS0,
+	MX6Q_PAD_EIM_LBA__ECSPI2_SS1,
+
+	/* I2C1 */
+	MX6Q_PAD_EIM_D21__I2C1_SCL,
+	MX6Q_PAD_EIM_D28__I2C1_SDA,
+
+	/* I2C3 */
+	MX6Q_PAD_EIM_D17__I2C3_SCL,
+	MX6Q_PAD_EIM_D18__I2C3_SDA,
+
+	/* PWM */
+	MX6Q_PAD_DISP0_DAT8__PWM1_PWMO,
+	MX6Q_PAD_DISP0_DAT9__PWM2_PWMO,
+	MX6Q_PAD_SD4_DAT1__PWM3_PWMO,
+	MX6Q_PAD_SD4_DAT2__PWM4_PWMO,
+
+	/* UART1 for debug */
+	MX6Q_PAD_CSI0_DAT10__UART1_TXD,
+	MX6Q_PAD_CSI0_DAT11__UART1_RXD,
+
+	/* UART2 RX, TX, CTS and RTS */
+	MX6Q_PAD_SD4_DAT4__UART2_RXD,
+	MX6Q_PAD_SD4_DAT5__UART2_RTS,
+	MX6Q_PAD_SD4_DAT6__UART2_CTS,
+	MX6Q_PAD_SD4_DAT7__UART2_TXD,
+
+	/* USBOTG ID pin */
+	IOMUX_PAD(0x05F4, 0x0224, 3, 0x0000, 0, (PAD_CTL_PKE | PAD_CTL_PUE | \
+		PAD_CTL_PUS_100K_DOWN | PAD_CTL_SPEED_LOW |	\
+		PAD_CTL_DSE_80ohm | PAD_CTL_SRE_FAST | PAD_CTL_HYS)),
+	/*
+	 * Originally MX6Q_PAD_GPIO_1__USBOTG_ID, but we want it to be
+	 * pulled down ID pin for fixed host connection.
+	 */
+
+	/* USB power enable pins */
+	MX6Q_PAD_EIM_D22__GPIO_3_22,
+	MX6Q_PAD_GPIO_0__GPIO_1_0,
+
+	/* USB OC pin */
+	MX6Q_PAD_KEY_COL4__USBOH3_USBOTG_OC,
+	MX6Q_PAD_GPIO_3__USBOH3_USBH1_OC,
+
+	/* USDHC2 */
+	MX6Q_PAD_SD2_CLK__USDHC2_CLK,
+	MX6Q_PAD_SD2_CMD__USDHC2_CMD,
+	MX6Q_PAD_SD2_DAT0__USDHC2_DAT0,
+	MX6Q_PAD_SD2_DAT1__USDHC2_DAT1,
+	MX6Q_PAD_SD2_DAT2__USDHC2_DAT2,
+	MX6Q_PAD_SD2_DAT3__USDHC2_DAT3,
+	MX6Q_PAD_GPIO_4__USDHC2_CD,		/* SD2_CD */
+
+	/* IR in */
+	MX6Q_PAD_GPIO_2__GPIO_1_2,
+};
+
+#endif
diff --git a/arch/arm/tools/mach-types b/arch/arm/tools/mach-types
index 72869ec..0424305 100644
--- a/arch/arm/tools/mach-types
+++ b/arch/arm/tools/mach-types
@@ -1120,6 +1120,6 @@ mx6q_arm2		MACH_MX6Q_ARM2		MX6Q_ARM2		3837
 mx6sl_arm2		MACH_MX6SL_ARM2		MX6SL_ARM2		4091
 mx6q_hdmidongle		MACH_MX6Q_HDMIDONGLE    MX6Q_HDMIDONGLE		4284
 mx6sl_evk		MACH_MX6SL_EVK		MX6SL_EVK		4307
-c1			MACH_C1			C1			4773
+hb			MACH_HB			HB			4773
 cuboxi			MACH_CUBOXI		CUBOXI			4821
 
-- 
1.7.9.5

