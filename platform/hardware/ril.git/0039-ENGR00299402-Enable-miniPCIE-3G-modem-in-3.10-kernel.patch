From ff40860e3ec25069f7191aeae29b1bd832f59d29 Mon Sep 17 00:00:00 2001
From: "guoyin.chen" <guoyin.chen@freescale.com>
Date: Thu, 20 Feb 2014 15:51:51 +0800
Subject: [PATCH 39/39] ENGR00299402 Enable miniPCIE 3G modem in 3.10 kernel

Remove unused power ctrl which only available for omap

Signed-off-by: guoyin.chen <guoyin.chen@freescale.com>
---
 reference-ril/atchannel.c | 51 +----------------------------------------------
 1 file changed, 1 insertion(+), 50 deletions(-)

diff --git a/reference-ril/atchannel.c b/reference-ril/atchannel.c
index a3159b8..4ac5261 100644
--- a/reference-ril/atchannel.c
+++ b/reference-ril/atchannel.c
@@ -14,7 +14,7 @@
 ** See the License for the specific language governing permissions and
 ** limitations under the License.
 */
-/* Copyright (C) 2011-2013 Freescale Semiconductor, Inc. */
+/* Copyright (C) 2011-2014 Freescale Semiconductor, Inc. */
 
 #include "atchannel.h"
 #include "at_tok.h"
@@ -40,11 +40,6 @@
 #define LOG_TAG "AT"
 #include <utils/Log.h>
 
-#ifdef HAVE_ANDROID_OS
-/* for IOCTL's */
-#include <linux/omap_csmi.h>
-#endif /*HAVE_ANDROID_OS*/
-
 #include "misc.h"
 
 #ifdef HAVE_ANDROID_OS
@@ -69,8 +64,6 @@ static ATUnsolHandler s_unsolHandler;
 static char s_ATBuffer[MAX_AT_RESPONSE+1];
 static char *s_ATBufferCur = s_ATBuffer;
 
-static int s_ackPowerIoctl; /* true if TTY has android byte-count
-                                handshake for low power*/
 static int s_readCount = 0;
 
 #if AT_DEBUG
@@ -562,14 +555,6 @@ static void *readerLoop(void *arg)
         } else {
             processLine(line);
         }
-
-#ifdef HAVE_ANDROID_OS
-        if (s_ackPowerIoctl > 0) {
-            /* acknowledge that bytes have been read and processed */
-            ioctl(s_fd, OMAP_CSMI_TTY_ACK, &s_readCount);
-            s_readCount = 0;
-        }
-#endif /*HAVE_ANDROID_OS*/
     }
 
     onReaderClosed();
@@ -693,40 +678,6 @@ int at_open(int fd, ATUnsolHandler h)
     s_smsPDU = NULL;
     sp_response = NULL;
 
-    /* Android power control ioctl */
-#ifdef HAVE_ANDROID_OS
-#ifdef OMAP_CSMI_POWER_CONTROL
-    ret = ioctl(fd, OMAP_CSMI_TTY_ENABLE_ACK);
-    if(ret == 0) {
-        int ack_count;
-		int read_count;
-        int old_flags;
-        char sync_buf[256];
-        old_flags = fcntl(fd, F_GETFL, 0);
-        fcntl(fd, F_SETFL, old_flags | O_NONBLOCK);
-        do {
-            ioctl(fd, OMAP_CSMI_TTY_READ_UNACKED, &ack_count);
-			read_count = 0;
-            do {
-                ret = read(fd, sync_buf, sizeof(sync_buf));
-				if(ret > 0)
-					read_count += ret;
-            } while(ret > 0 || (ret < 0 && errno == EINTR));
-            ioctl(fd, OMAP_CSMI_TTY_ACK, &ack_count);
-         } while(ack_count > 0 || read_count > 0);
-        fcntl(fd, F_SETFL, old_flags);
-        s_readCount = 0;
-        s_ackPowerIoctl = 1;
-    }
-    else
-        s_ackPowerIoctl = 0;
-
-#else // OMAP_CSMI_POWER_CONTROL
-    s_ackPowerIoctl = 0;
-
-#endif // OMAP_CSMI_POWER_CONTROL
-#endif /*HAVE_ANDROID_OS*/
-
     pthread_attr_init (&attr);
     pthread_attr_setdetachstate(&attr, PTHREAD_CREATE_DETACHED);
 
-- 
1.8.0

