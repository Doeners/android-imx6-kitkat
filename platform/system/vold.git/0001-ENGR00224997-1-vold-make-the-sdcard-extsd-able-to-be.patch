From 0efaf302e2565b3824a6884f4d054f058dec3710 Mon Sep 17 00:00:00 2001
From: Xinyu Chen <xinyu.chen@freescale.com>
Date: Thu, 20 Sep 2012 12:20:02 +0800
Subject: [PATCH 1/9] ENGR00224997-1 vold: make the sdcard/extsd able to be
 mounted

Fix failed to record fourth partition bug, max partition
should be MAX_PARTITIONS, but not MAX_PARTITIONS-1.

Enhance the DirectVolume to handle the disk whose
partition number are larger than MAX_PARTITION, the
mDiskNumParts must be set to MAX_PARTITION in this case,
otherwise there will be over bound access.

Add eMMC boot block disk filter out logic.
As our eMMC device has two boot blocks disks (not partition),
the kernel will send out disk uevent after the normal
eMMC block disk uevent, this boot uevent will overwrite
the sdcard DirectVolume instance memebers, especially the
mDiskNumParts, causes can not get correct major/minor later.

Change-Id: I6a86497af563e04528a47d203d51bad92527e108
Signed-off-by: Xinyu Chen <xinyu.chen@freescale.com>

Conflicts:
	DirectVolume.cpp
---
 DirectVolume.cpp | 16 ++++++++++++++--
 1 file changed, 14 insertions(+), 2 deletions(-)

diff --git a/DirectVolume.cpp b/DirectVolume.cpp
index 960eef6..cc594b9 100644
--- a/DirectVolume.cpp
+++ b/DirectVolume.cpp
@@ -156,6 +156,7 @@ void DirectVolume::handleDiskAdded(const char *devpath, NetlinkEvent *evt) {
     mDiskMinor = atoi(evt->findParam("MINOR"));
 
     const char *tmp = evt->findParam("NPARTS");
+    const char *name = evt->findParam("DEVNAME");
     if (tmp) {
         mDiskNumParts = atoi(tmp);
     } else {
@@ -163,6 +164,14 @@ void DirectVolume::handleDiskAdded(const char *devpath, NetlinkEvent *evt) {
         mDiskNumParts = 1;
     }
 
+    if (name && !strncmp(name, "mmcblk0boot", 11)) {
+        SLOGD("Ignore the eMMC boot disk:%s", name);
+        return;
+    }
+
+    if (mDiskNumParts > MAX_PARTITIONS)
+        mDiskNumParts = MAX_PARTITIONS;
+
     int partmask = 0;
     int i;
     for (i = 1; i <= mDiskNumParts; i++) {
@@ -215,8 +224,8 @@ void DirectVolume::handlePartitionAdded(const char *devpath, NetlinkEvent *evt)
 #ifdef PARTITION_DEBUG
     SLOGD("Dv:partAdd: part_num = %d, minor = %d\n", part_num, minor);
 #endif
-    if (part_num >= MAX_PARTITIONS) {
-        SLOGE("Dv:partAdd: ignoring part_num = %d (max: %d)\n", part_num, MAX_PARTITIONS-1);
+    if (part_num > MAX_PARTITIONS) {
+        SLOGE("Dv:partAdd: ignoring part_num = %d (max: %d)\n", part_num, MAX_PARTITIONS);
     } else {
         mPartMinors[part_num -1] = minor;
     }
@@ -257,6 +266,9 @@ void DirectVolume::handleDiskChanged(const char *devpath, NetlinkEvent *evt) {
         mDiskNumParts = 1;
     }
 
+    if (mDiskNumParts > MAX_PARTITIONS)
+        mDiskNumParts = MAX_PARTITIONS;
+
     int partmask = 0;
     int i;
     for (i = 1; i <= mDiskNumParts; i++) {
-- 
1.8.0

