From ca35442c3c70e928365256340b651e077cbd89c4 Mon Sep 17 00:00:00 2001
From: Jianzheng Zhou <B38613@freescale.com>
Date: Mon, 10 Sep 2012 16:19:43 +0800
Subject: [PATCH 10/39] ENGR00223120 Ethernet:fix an priority issue in
 concurrent

As default, ethernet is not added in framework and connectivityservice
also not consider it, when adding it in config.xml,there will be a "mobile,
wifi, ethernet" concurrent case falling into forever loopback.
For only two types of network,the logic has no issue in tryFailover(),but
if three types it will has this issue, so priority is needed to optimise the
reconnect process.

Signed-off-by: Jianzheng Zhou <B38613@freescale.com>
(cherry picked from commit 727248402fcfc73f151fd8ecd1e9378e145dc3a4)

Conflicts:
	services/java/com/android/server/ConnectivityService.java
---
 services/java/com/android/server/ConnectivityService.java | 11 +++++------
 1 file changed, 5 insertions(+), 6 deletions(-)

diff --git a/services/java/com/android/server/ConnectivityService.java b/services/java/com/android/server/ConnectivityService.java
index 15cd228..f907885 100644
--- a/services/java/com/android/server/ConnectivityService.java
+++ b/services/java/com/android/server/ConnectivityService.java
@@ -2015,11 +2015,10 @@ public class ConnectivityService extends IConnectivityManager.Stub {
             // don't signal a reconnect for anything lower or equal priority than our
             // current connected default
             // TODO - don't filter by priority now - nice optimization but risky
-//            int currentPriority = -1;
-//            if (mActiveDefaultNetwork != -1) {
-//                currentPriority = mNetConfigs[mActiveDefaultNetwork].mPriority;
-//            }
-
+            int currentPriority = -1;
+            if (mActiveDefaultNetwork != -1) {
+                currentPriority = mNetConfigs[mActiveDefaultNetwork].priority;
+            }
             for (int checkType=0; checkType <= ConnectivityManager.MAX_NETWORK_TYPE; checkType++) {
                 if (checkType == prevNetType) continue;
                 if (mNetConfigs[checkType] == null) continue;
@@ -2037,7 +2036,7 @@ public class ConnectivityService extends IConnectivityManager.Stub {
 
 //                if (!mNetTrackers[checkType].isAvailable()) continue;
 
-//                if (currentPriority >= mNetConfigs[checkType].mPriority) continue;
+                if (currentPriority >= mNetConfigs[checkType].priority) continue;
 
                 NetworkStateTracker checkTracker = mNetTrackers[checkType];
                 NetworkInfo checkInfo = checkTracker.getNetworkInfo();
-- 
1.8.0

