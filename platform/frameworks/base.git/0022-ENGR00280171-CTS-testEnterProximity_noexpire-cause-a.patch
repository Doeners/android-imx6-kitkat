From ce433a66ac4669dc116da70360433f2306308140 Mon Sep 17 00:00:00 2001
From: "guoyin.chen" <guoyin.chen@freescale.com>
Date: Wed, 18 Sep 2013 14:50:02 +0800
Subject: [PATCH 22/39] ENGR00280171 CTS testEnterProximity_noexpire cause
 android reboot

The case will request network location provider, which only available
with gms packages. Without gms package, it will tricker below exception
on system server, which will reboot android framework:
threadid=12: thread exiting with uncaught exception (group=0x418ec700)
*** FATAL EXCEPTION IN SYSTEM PROCESS: android.server.ServerThread
java.lang.IllegalArgumentException: provider doesn't exisit: null
at com.android.server.LocationManagerService.requestLocationUpdatesLocked
(LocationManagerService.java:1323)
at com.android.server.LocationManagerService.requestLocationUpdatesLocked
(LocationManagerService.java:1302)

Signed-off-by: guoyin.chen <guoyin.chen@freescale.com>
---
 .../src/com/android/location/fused/FusionEngine.java        | 13 +++++++++++++
 1 file changed, 13 insertions(+)

diff --git a/packages/FusedLocation/src/com/android/location/fused/FusionEngine.java b/packages/FusedLocation/src/com/android/location/fused/FusionEngine.java
index 7cee066..9588261 100644
--- a/packages/FusedLocation/src/com/android/location/fused/FusionEngine.java
+++ b/packages/FusedLocation/src/com/android/location/fused/FusionEngine.java
@@ -141,6 +141,19 @@ public class FusionEngine implements LocationListener {
                 stats.minTime = minTime;
                 mLocationManager.requestLocationUpdates(name, minTime, 0, this, mLooper);
             }
+        if (!stats.requested) {
+            stats.requestTime = SystemClock.elapsedRealtime();
+            stats.requested = true;
+            stats.minTime = minTime;
+            try {
+                mLocationManager.requestLocationUpdates(name, minTime, 0, this, mLooper);
+            }
+            catch(IllegalArgumentException e) {
+               e.printStackTrace();
+            }
+        } else if (stats.minTime != minTime) {
+            stats.minTime = minTime;
+            mLocationManager.requestLocationUpdates(name, minTime, 0, this, mLooper);
         }
     }
 
-- 
1.8.0

