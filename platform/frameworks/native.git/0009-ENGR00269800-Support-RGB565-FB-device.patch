From 494fde9c691c3ba8fa6b820ebdd5c09a97512a54 Mon Sep 17 00:00:00 2001
From: "guoyin.chen" <guoyin.chen@freescale.com>
Date: Fri, 5 Jul 2013 12:51:55 +0800
Subject: [PATCH 09/26] ENGR00269800 Support RGB565 FB device

Add HWC_DISPLAY_FORMAT query to hwc hal to get FB's format
Return FB0's format as VisualID to SurfaceFlinger

Signed-off-by: guoyin.chen <guoyin.chen@freescale.com>
---
 services/surfaceflinger/DisplayHardware/HWComposer.cpp | 11 +++++++++--
 1 file changed, 9 insertions(+), 2 deletions(-)

diff --git a/services/surfaceflinger/DisplayHardware/HWComposer.cpp b/services/surfaceflinger/DisplayHardware/HWComposer.cpp
index c7d1a90..9a4a226 100644
--- a/services/surfaceflinger/DisplayHardware/HWComposer.cpp
+++ b/services/surfaceflinger/DisplayHardware/HWComposer.cpp
@@ -329,6 +329,7 @@ static const uint32_t DISPLAY_ATTRIBUTES[] = {
     HWC_DISPLAY_HEIGHT,
     HWC_DISPLAY_DPI_X,
     HWC_DISPLAY_DPI_Y,
+    HWC_DISPLAY_FORMAT,
     HWC_DISPLAY_NO_ATTRIBUTE,
 };
 #define NUM_DISPLAY_ATTRIBUTES (sizeof(DISPLAY_ATTRIBUTES) / sizeof(DISPLAY_ATTRIBUTES)[0])
@@ -375,6 +376,8 @@ status_t HWComposer::queryDisplayProperties(int disp) {
         case HWC_DISPLAY_DPI_Y:
             mDisplayData[disp].ydpi = values[i] / 1000.0f;
             break;
+        case HWC_DISPLAY_FORMAT:
+            mDisplayData[disp].format = values[i];
         default:
             ALOG_ASSERT(false, "unknown display attribute[%d] %#x",
                     i, DISPLAY_ATTRIBUTES[i]);
@@ -383,7 +386,10 @@ status_t HWComposer::queryDisplayProperties(int disp) {
     }
 
     // FIXME: what should we set the format to?
-    mDisplayData[disp].format = HAL_PIXEL_FORMAT_RGBA_8888;
+    if ((mDisplayData[disp].format != HAL_PIXEL_FORMAT_RGB_565) &&
+        (mDisplayData[disp].format != HAL_PIXEL_FORMAT_RGBA_8888))
+        mDisplayData[disp].format = HAL_PIXEL_FORMAT_RGBA_8888;
+
     mDisplayData[disp].connected = true;
     if (mDisplayData[disp].xdpi == 0.0f || mDisplayData[disp].ydpi == 0.0f) {
         float dpi = getDefaultDensity(h);
@@ -762,8 +768,9 @@ int HWComposer::getVisualID() const {
         // FIXME: temporary hack until HAL_PIXEL_FORMAT_IMPLEMENTATION_DEFINED
         // is supported by the implementation. we can only be in this case
         // if we have HWC 1.1
-        return HAL_PIXEL_FORMAT_RGBA_8888;
+        //return HAL_PIXEL_FORMAT_RGBA_8888;
         //return HAL_PIXEL_FORMAT_IMPLEMENTATION_DEFINED;
+        return mDisplayData[0].format;
     } else {
         return mFbDev->format;
     }
-- 
1.8.0

