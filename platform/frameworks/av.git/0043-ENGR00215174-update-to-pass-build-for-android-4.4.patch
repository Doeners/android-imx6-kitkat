From d44518b213d252365f5ffd47764f0eb12cba68c3 Mon Sep 17 00:00:00 2001
From: Liu Xiaowen <b37945@freescale.com>
Date: Wed, 6 Nov 2013 16:30:39 +0800
Subject: [PATCH 43/72] ENGR00215174 update to pass build for android 4.4.

mRecycledTrack has been declared to be a sp pointer.
replace delete operation with assign to 0 for sp pointer.
modify the flags variable to be mFlags.

Signed-off-by: Liu Xiaowen <b37945@freescale.com>
---
 media/libmediaplayerservice/MediaPlayerService.cpp | 10 +++-------
 services/audioflinger/Threads.cpp                  |  2 +-
 2 files changed, 4 insertions(+), 8 deletions(-)

diff --git a/media/libmediaplayerservice/MediaPlayerService.cpp b/media/libmediaplayerservice/MediaPlayerService.cpp
index a919d5d..d5faef9 100644
--- a/media/libmediaplayerservice/MediaPlayerService.cpp
+++ b/media/libmediaplayerservice/MediaPlayerService.cpp
@@ -1500,7 +1500,7 @@ status_t MediaPlayerService::AudioOutput::open(
       not released, it will cause issue.
       So here we checking the output flag, if it is direct output, then release it.
     */
-    if (mRecycledTrack) {
+    if (mRecycledTrack != 0) {
         int flags;
         AudioSystem::getFlags(mRecycledTrack->getCurrentOutput(), mStreamType, &flags);
         ALOGV("RecycledTrack getFlags %d",flags);
@@ -1511,7 +1511,6 @@ status_t MediaPlayerService::AudioOutput::open(
                 mCallbackData->endTrackSwitch();
             }
             mRecycledTrack->flush();
-            delete mRecycledTrack;
             mRecycledTrack = NULL;
             delete mCallbackData;
             mCallbackData = NULL;
@@ -1519,7 +1518,7 @@ status_t MediaPlayerService::AudioOutput::open(
         }
     }
 
-    AudioTrack *t;
+    sp<AudioTrack> t;
     CallbackData *newcbd = NULL;
     if (mCallback != NULL) {
         newcbd = new CallbackData(this);
@@ -1550,7 +1549,7 @@ status_t MediaPlayerService::AudioOutput::open(
 
     if ((t == 0) || (t->initCheck() != NO_ERROR)) {
         ALOGE("Unable to create audio track");
-        delete t;
+        t = 0;
         delete newcbd;
         return NO_INIT;
     }
@@ -1593,9 +1592,6 @@ status_t MediaPlayerService::AudioOutput::open(
         deleteRecycledTrack();
     }
 
-    sp<AudioTrack> t;
-    CallbackData *newcbd = NULL;
-
     // We don't attempt to create a new track if we are recycling an
     // offloaded track. But, if we are recycling a non-offloaded or we
     // are switching where one is offloaded and one isn't then we create
diff --git a/services/audioflinger/Threads.cpp b/services/audioflinger/Threads.cpp
index 268149b..4db1c6f 100644
--- a/services/audioflinger/Threads.cpp
+++ b/services/audioflinger/Threads.cpp
@@ -3680,7 +3680,7 @@ AudioFlinger::PlaybackThread::mixer_state AudioFlinger::DirectOutputThread::prep
                     // it will then automatically call start() when data is available
                     android_atomic_or(CBLK_DISABLED, &cblk->mFlags);
                 } else if (last) {
-                    android_atomic_or(CBLK_DISABLED, &cblk->flags);
+                    android_atomic_or(CBLK_DISABLED, &cblk->mFlags);
                 } else if (i == (count -1)){
                     mixerStatus = MIXER_TRACKS_ENABLED;
                 }
-- 
1.8.0

