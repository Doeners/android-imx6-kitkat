From 15c6d4179df1a8ebe141a2b3298cacbc0607b54f Mon Sep 17 00:00:00 2001
From: Song Bing <b06498@freescale.com>
Date: Mon, 21 Oct 2013 17:06:09 +0800
Subject: [PATCH 37/68] ENGR00133115 fix for audio only case and some type
 error.

fix for audio only case and some type error.

Signed-off-by: Song Bing b06498@freescale.com
---
 media/libmediaplayerservice/nuplayer/StreamingSource.cpp | 10 +++++++---
 1 file changed, 7 insertions(+), 3 deletions(-)

diff --git a/media/libmediaplayerservice/nuplayer/StreamingSource.cpp b/media/libmediaplayerservice/nuplayer/StreamingSource.cpp
index acf0aea..a0cd1df 100644
--- a/media/libmediaplayerservice/nuplayer/StreamingSource.cpp
+++ b/media/libmediaplayerservice/nuplayer/StreamingSource.cpp
@@ -242,6 +242,8 @@ bool NuPlayer::StreamingSource::discardMediaDate(bool audio, int64_t timeUs, sp<
 
         source =
             static_cast<AnotherPacketSource *>(mTSParser->getSource(type).get());
+        if (source == NULL)
+            return false;
 
         while (1) {
             if (!source->hasBufferAvailable(&finalResult)) {
@@ -254,6 +256,8 @@ bool NuPlayer::StreamingSource::discardMediaDate(bool audio, int64_t timeUs, sp<
 
         source =
             static_cast<AnotherPacketSource *>(mTSParser->getSource(type).get());
+        if (source == NULL)
+            return false;
 
         nBufferedTimeUs = source->getBufferedDurationUs(&error);
         if (nBufferedTimeUs > DROP_VIDEO_THRESHOLD) {
@@ -302,12 +306,12 @@ bool NuPlayer::StreamingSource::discardMediaDate(bool audio, int64_t timeUs, sp<
     char value[PROPERTY_VALUE_MAX];
     int64_t nQualityCriteria = QUALITY_CATIRIA;
     // property for adjust quality criteria in ms, shouldn't less than 2 seconds.
-    if ((property_get("rw.wifisink.quality", value, NULL))) {
+    if ((property_get("sys.wifisink.quality", value, NULL))) {
         nQualityCriteria = atoi(value) * 1000;
     } 
 
     // property for adjust latency threshold in ms.
-    if ((property_get("rw.wifisink.latency", value, NULL))) {
+    if ((property_get("sys.wifisink.latency", value, NULL))) {
         mLatencyThreshold = atoi(value) * 1000;
     } else {
         // Adjust drop threshold.
@@ -367,7 +371,7 @@ status_t NuPlayer::StreamingSource::dequeueAccessUnit(
             CHECK((*accessUnit)->meta()->findInt64("timeUs", &timeUs));
             ALOGV("dequeueAccessUnit timeUs=%lld us", timeUs);
 
-            if (!(mSource->flags() | IStreamSource::kFlagKeepLowLatency \
+            if (!(mSource->flags() & IStreamSource::kFlagKeepLowLatency \
                         && mPositionUs > 0)) 
                 break;
             if (discardMediaDate(audio, timeUs, accessUnit) == false)
-- 
1.8.0

